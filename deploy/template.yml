---
kind: Template
apiVersion: v1
metadata:
  annotations:
    version: 0.0.2
    description: A bare-bones deployment template for a web application.
  name: web-basic
labels:
  template: web-basic
  template.version: 0.0.2
message: A new python application has been created in your project.
parameters:
- description: The name for the application.
  displayName: Application Name
  name: APP_NAME
  required: true
- description: FS Group and RunAsUser param.
  displayName: USERFSGROUP
  name: USR_FS
  required: true
- description: Supplementary Group 1.
  displayName: Supp Group 1
  name: SUPP_GROUP_1
  required: true
- description: Supplementary Group 2.
  displayName: Supp Group 2
  name: SUPP_GROUP_2
- description: The image name for the application.
  displayName: Image Name
  name: IMAGE_NAME
  required: true
- description: The version of the application to deploy.
  displayName: Application Version
  name: APP_VERSION
  required: true
- description: The docker registry hostname for the environment
  displayName: Docker Registry
  name: DOCKER_REGISTRY
  required: true
  value: docker-icg-prod-local.artifactrepository.citigroup.net
- description: The docker namespace
  displayName: Docker Namespace
  name: DOCKER_NAMESPACE
  required: true
- description: The target environment
  displayName: Environment
  name: ENV
  value: DEV
  required: true
- description: Persistent Volume Claim Name
  displayName: PVC Name
  name: PVC_NAME
  required: true
- description: Base Route
  displayName: Base Route
  name: BASE_ROUTE
  required: true
- description: The fs base path.
  displayName: Base Path
  name: BASE_PATH
  required: true
- description: Notifications Route
  displayName: Notifications Route
  name: NOTIFICATIONS_URL
  required: true
- description: Health check endpoint. Defaults to '/'
  displayName: Custom Health Check Endpoint
  name: HEALTH_CHECK_ENDPOINT
  value: /api/v1/swagger
  required: false
- description: 'Custom hostname for http service route.  Leave blank for default hostname,
    e.g.: <application-name>-<project>.<default-domain-suffix>'
  displayName: Custom http Route Hostname
  name: HOSTNAME_HTTP
  value: ''
  required: false
- description: The number of pods to run
  displayName: Replicas
  name: REPLICAS
  required: true
- description: The memory limit for the application container
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 1Gi
objects:
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: "${APP_NAME}"
  metadata:
    name: "${APP_NAME}"
    labels:
      app: "${APP_NAME}"
    annotations:
      description: The application's http port.
- kind: Route
  apiVersion: v1
  id: "${APP_NAME}-http"
  metadata:
    name: "${APP_NAME}"
    labels:
      app: "${APP_NAME}"
    annotations:
      description: Route for application's http service.
  spec:
    host: "${HOSTNAME_HTTP}"
    to:
      name: "${APP_NAME}"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    labels:
      app: "${APP_NAME}"
  spec:
    strategy:
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxSurge: "25%"
        maxUnavailable: "25%"
      type: Rolling
    triggers: []
    replicas: ${{REPLICAS}}
    selector:
      deploymentConfig: "${APP_NAME}"
    template:
      metadata:
        name: "${APP_NAME}"
        labels:
          deploymentConfig: "${APP_NAME}"
          app: "${APP_NAME}"
      spec:
        terminationGracePeriodSeconds: 75
        volumes:
        - name: pvc-nas
          persistentVolumeClaim:
            claimName: "${PVC_NAME}"
        securityContext:
          fsGroup: ${{USR_FS}}
          runAsUser: ${{USR_FS}}
          supplementalGroups:
            - ${{SUPP_GROUP_1}}
            - ${{SUPP_GROUP_2}}
        containers:
        - name: "${APP_NAME}"
          image: "${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}/${IMAGE_NAME}:${APP_VERSION}"
          imagePullPolicy: Always
          env:
            - name: ENVIRONMENT
              value: "${ENV}"
            - name: BASE_ROUTE
              value: "${BASE_ROUTE}"
            - name: BASE_PATH
              value: "${BASE_PATH}"
            - name: NOTIFICATIONS_URL
              value: "${NOTIFICATIONS_URL}"
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          ports:
          - name: http
            containerPort: 8080
            protocol: TCP
          volumeMounts:
          - name: pvc-nas
            mountPath: /nas